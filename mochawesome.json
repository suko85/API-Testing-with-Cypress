{
  "stats": {
    "suites": 2,
    "tests": 6,
    "passes": 5,
    "pending": 1,
    "failures": 0,
    "start": "2021-06-29T14:58:42.892Z",
    "end": "2021-06-29T14:59:01.017Z",
    "duration": 16945,
    "testsRegistered": 6,
    "passPercent": 83.33333333333333,
    "pendingPercent": 16.666666666666668,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "db0fd45c-47af-4f7e-8c95-bf3ba812ddcd",
      "title": "",
      "fullFile": "cypress/integration/secondTest.spec.js",
      "file": "cypress/integration/secondTest.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "260e35ca-eb07-4b57-b0de-8741378351f0",
          "title": "Test log out",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "verify use can log out successfully",
              "fullTitle": "Test log out verify use can log out successfully",
              "timedOut": null,
              "duration": 2229,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains('Settings').click();\ncy.contains('Or click here to logout').click();\ncy.get('.navbar-nav').should('contain', 'Sign up');",
              "err": {},
              "uuid": "7ac3cf69-c855-4d83-ac21-982177897af9",
              "parentUUID": "260e35ca-eb07-4b57-b0de-8741378351f0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7ac3cf69-c855-4d83-ac21-982177897af9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2229,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "d68ded7b-aa50-433c-bb2d-770d1f1267ae",
      "title": "",
      "fullFile": "cypress/integration/firstTest.spec.js",
      "file": "cypress/integration/firstTest.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e38985da-063f-456d-9bd8-a4acace4a042",
          "title": "Test with backend",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "verify correct request and response",
              "fullTitle": "Test with backend verify correct request and response",
              "timedOut": null,
              "duration": 5495,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept({\n  method: 'POST',\n  path: 'articles'\n}).as('postArticles'); //here we save the result of the call to POST for '**/articles'\n// in postArticles object.\ncy.contains('New Article').click();\ncy.get('[formcontrolname=\"title\"]').type('This is a title!');\ncy.get('[formcontrolname=\"description\"]').type('This is a description!');\ncy.get('[formcontrolname=\"body\"]').type('This is a body of the article!');\ncy.contains('Publish Article').click();\ncy.wait('@postArticles'); // waiting for postArticles will be done using '@'\ncy.get('@postArticles').then(xhr => {\n  console.log(xhr);\n  expect(xhr.response.statusCode).to.equal(200);\n  expect(xhr.request.body.article.body).to.equal('This is a body of the article!');\n  expect(xhr.response.body.article.description).to.equal('This is a description!');\n});",
              "err": {},
              "uuid": "ba4e68b3-0d67-4270-83c4-55f51960d23a",
              "parentUUID": "e38985da-063f-456d-9bd8-a4acace4a042",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "intercepting and modifying the request and response",
              "fullTitle": "Test with backend intercepting and modifying the request and response",
              "timedOut": null,
              "duration": 2817,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// cy.intercept('POST', '**/articles', (req) => {\n//     req.body.article.description = \"This is a description 2!\"\n// }).as('postArticles') //here we save the result of the call to POST for '**/articles'\n//                                                    // in postArticles object.\ncy.intercept('POST', '**/articles', req => {\n  req.reply(res => {\n    expect(res.body.article.description).to.equal('This is a description!');\n    res.body.article.description = \"This is a description 2!\";\n  });\n}).as('postArticles'); //here we save the result of the call to POST for '**/articles'\n// in postArticles object.\ncy.contains('New Article').click();\ncy.get('[formcontrolname=\"title\"]').type('This is a title!');\ncy.get('[formcontrolname=\"description\"]').type('This is a description!');\ncy.get('[formcontrolname=\"body\"]').type('This is a body of the article!');\ncy.contains('Publish Article').click();\ncy.wait('@postArticles'); // waiting for postArticles will be done using '@'\ncy.get('@postArticles').then(xhr => {\n  console.log(xhr);\n  expect(xhr.response.statusCode).to.equal(200);\n  expect(xhr.request.body.article.body).to.equal('This is a body of the article!');\n  expect(xhr.response.body.article.description).to.equal('This is a description 2!');\n});",
              "err": {},
              "uuid": "482ed546-86a9-4ffe-b07c-da2a64fa5af1",
              "parentUUID": "e38985da-063f-456d-9bd8-a4acace4a042",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should gave tags with routing object",
              "fullTitle": "Test with backend should gave tags with routing object",
              "timedOut": null,
              "duration": 1346,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.tag-list').should('contain', 'cypress').and('contain', 'automation').and('contain', 'testing');",
              "err": {},
              "uuid": "6bed1bb5-4166-4961-b575-80e30021ee8e",
              "parentUUID": "e38985da-063f-456d-9bd8-a4acace4a042",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "verify global feed likes count",
              "fullTitle": "Test with backend verify global feed likes count",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "6d388b7c-99c2-4315-ab53-2250fbf146f3",
              "parentUUID": "e38985da-063f-456d-9bd8-a4acace4a042",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "delete a new article in a global feed",
              "fullTitle": "Test with backend delete a new article in a global feed",
              "timedOut": null,
              "duration": 5058,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const bodyRequest = {\n  \"article\": {\n    \"tagList\": [],\n    \"title\": \"Request from API\",\n    \"description\": \"API Testing is easy\",\n    \"body\": \"Angular is cool\"\n  }\n}; //getting the token from the alias saved in the login method\ncy.get('@token').then(token => {\n  //sending the POST request to create the article passing header and parameters\n  cy.request({\n    url: Cypress.env('apiUrl') + 'api/articles/',\n    headers: {\n      'Authorization': 'Token ' + token\n    },\n    method: 'POST',\n    body: bodyRequest\n  }).then(response => {\n    expect(response.status).to.equal(200); // checking that the POST was successfull\n  }); // going to the recently created article(the first one on the list) to delete it. \n  cy.contains('Global Feed').click();\n  cy.get('.article-preview').first().click();\n  cy.get('.article-actions').contains('Delete Article').click(); //getting the list of articles to make sure the deleted one is not present.\n  cy.request({\n    url: Cypress.env('apiUrl') + 'api/articles?limit=10&offset=0',\n    headers: {\n      'Authorization': 'Token ' + token\n    },\n    method: 'GET'\n  }).its('body').then(body => {\n    expect(body.articles[0].title).not.equal('Request from API');\n  });\n});",
              "err": {},
              "uuid": "85737a76-833d-4cba-b5fa-f2268c16c3f6",
              "parentUUID": "e38985da-063f-456d-9bd8-a4acace4a042",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ba4e68b3-0d67-4270-83c4-55f51960d23a",
            "482ed546-86a9-4ffe-b07c-da2a64fa5af1",
            "6bed1bb5-4166-4961-b575-80e30021ee8e",
            "85737a76-833d-4cba-b5fa-f2268c16c3f6"
          ],
          "failures": [],
          "pending": [
            "6d388b7c-99c2-4315-ab53-2250fbf146f3"
          ],
          "skipped": [],
          "duration": 14716,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.2"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/results/mochawesome",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "5.2.0"
    }
  }
}